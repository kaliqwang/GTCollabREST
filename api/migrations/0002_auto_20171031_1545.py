# -*- coding: utf-8 -*-
# Generated by Django 1.11.4 on 2017-10-31 19:45
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('api', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='GroupInvitation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('creator', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='group_invitations_as_creator', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('group__course', 'group', '-pk'),
            },
        ),
        migrations.CreateModel(
            name='MeetingInvitation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('creator', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='meeting_invitations_as_creator', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('meeting__course', 'meeting', '-pk'),
            },
        ),
        migrations.CreateModel(
            name='MeetingProposal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(max_length=50)),
                ('start_date', models.DateField(blank=True)),
                ('start_time', models.TimeField(blank=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('expiration_minutes', models.PositiveIntegerField(default=60)),
                ('closed', models.BooleanField(default=False)),
                ('approval_needed', models.ManyToManyField(blank=True, editable=False, related_name='meeting_proposals_approval_needed', to=settings.AUTH_USER_MODEL)),
                ('creator', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='meeting_proposals', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('meeting__course', 'meeting', '-pk'),
            },
        ),
        migrations.AlterModelOptions(
            name='group',
            options={'ordering': ('course', 'name', 'pk')},
        ),
        migrations.AlterModelOptions(
            name='meeting',
            options={'ordering': ('course', '-start_date', '-start_time', '-duration_minutes', 'name', 'pk')},
        ),
        migrations.AddField(
            model_name='meetingproposal',
            name='meeting',
            field=models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='proposals', to='api.Meeting'),
        ),
        migrations.AddField(
            model_name='meetinginvitation',
            name='meeting',
            field=models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='invitations', to='api.Meeting'),
        ),
        migrations.AddField(
            model_name='meetinginvitation',
            name='recipients',
            field=models.ManyToManyField(related_name='meeting_invitations_as_recipient', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='groupinvitation',
            name='group',
            field=models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='invitations', to='api.Group'),
        ),
        migrations.AddField(
            model_name='groupinvitation',
            name='recipients',
            field=models.ManyToManyField(related_name='group_invitations_as_recipient', to=settings.AUTH_USER_MODEL),
        ),
    ]
